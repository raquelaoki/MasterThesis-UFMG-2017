summary(concatena1$razao)
xweight <- seq(min(bd$dif), max(bd$dif), 0.1)
yweight <- predict(modelo, list(dif = xweight),type="response")
plot( concatena1$dif+rnorm(dim(concatena1)[1],0,1.1),
concatena1$res+rnorm(dim(concatena1)[1],0,0.025), pch = 16,
xlab = "Diferença de pontos", ylab = paste("Classificação : inclinação ",
round(summary(modelo)[[12]][2,1],2),sep="")
,main="modelo concatenado")
lines(xweight, yweight)
?predict
xweight <- seq(min(concatena1$dif), max(concatena1$dif), 0.1)
x1weight <- seq(min(concatena1$razao), max(concatena1$razao), 0.1)
yweight <- predict(modelo, list(dif = xweight, razao=x1weight),type="response")
xweight <- seq(min(concatena1$dif), max(concatena1$dif), 0.1)
x1weight <- seq(min(concatena1$razao), max(concatena1$razao), 0.1)
yweight <- predict(modelo, list(dif = xweight, razao=x1weight),type="response")
xweight <- seq(min(concatena1$dif), max(concatena1$dif), lenght=1000)
x1weight <- seq(min(concatena1$razao), max(concatena1$razao), lenght=1000)
xweight <- seq(min(concatena1$dif), max(concatena1$dif), length=1000)
x1weight <- seq(min(concatena1$razao), max(concatena1$razao), length=1000)
yweight <- predict(modelo, list(dif = xweight, razao=x1weight),type="response")
plot( concatena1$dif+rnorm(dim(concatena1)[1],0,1.1),
concatena1$res+rnorm(dim(concatena1)[1],0,0.025), pch = 16,
xlab = "Diferença de pontos", ylab = paste("Classificação : inclinação ",
round(summary(modelo)[[12]][2,1],2),sep="")
,main="modelo concatenado")
lines(xweight, yweight)
plot( concatena1$dif+rnorm(dim(concatena1)[1],0,1.1),
concatena1$res+rnorm(dim(concatena1)[1],0,0.025), pch = 16,
xlab = "Diferença de pontos", ylab = paste("Classificação : inclinação ",
round(summary(modelo)[[12]][2,1],2),sep=""), main="modelo concatenado")
lines(xweight, yweight)
savePlot(filename="imagem1",type="jpg",device=dev.cur())
windows()
plot( concatena1$dif+rnorm(dim(concatena1)[1],0,1.1),
concatena1$res+rnorm(dim(concatena1)[1],0,0.025), pch = 16,
xlab = "Diferença de pontos", ylab = paste("Classificação : inclinação ",
round(summary(modelo)[[12]][2,1],2),sep=""), main="modelo concatenado")
lines(xweight, yweight)
savePlot(filename="imagem1",type="jpg",device=dev.cur())
summary(modelo)[[12]][2,1],2)
summary(modelo)
summary(modelo)[[12]][2,1]
summary(modelo)[[12]][3,1]
windows()
plot( concatena1$razao+rnorm(dim(concatena1)[1],0,1.1),
concatena1$res+rnorm(dim(concatena1)[1],0,0.025), pch = 16,
xlab = "Razão Vitórias", ylab = paste("Classificação : inclinação ",
round(summary(modelo)[[12]][3,1],2),sep=""), main="modelo concatenado")
lines(x1weight, yweight)
plot( concatena1$razao+rnorm(dim(concatena1)[1],0,1.1),
concatena1$res+rnorm(dim(concatena1)[1],0,0.0025), pch = 16,
xlab = "Razão Vitórias", ylab = paste("Classificação : inclinação ",
round(summary(modelo)[[12]][3,1],2),sep=""), main="modelo concatenado")
lines(x1weight, yweight)
summary( concatena1$res+rnorm(dim(concatena1)[1],0,0.0025))
summary(concatena1$razao+rnorm(dim(concatena1)[1],0,1.1))
summary(concatena1$razao
)
plot( concatena1$razao+rnorm(dim(concatena1)[1],0,0.025),
concatena1$res+rnorm(dim(concatena1)[1],0,0.025), pch = 16,
xlab = "Razão Vitórias", ylab = paste("Classificação : inclinação ",
round(summary(modelo)[[12]][3,1],2),sep=""), main="modelo concatenado")
lines(x1weight, yweight)
savePlot(filename="imagem2",type="jpg",device=dev.cur())
bd_models = read.table("jogos_modelo_completo.csv", header=T, sep=";")
head(bd_models)
names(bd_models)= c(names(bd_models)[-c(13:15)],"erro","valor_z", "valor_p"),
dim(bd_models)
names(bd_models)= c(names(bd_models)[-c(14:16)],"erro","valor_z", "valor_p"),
names(bd_models)= c(names(bd_models)[-c(14:16)],"erro","valor_z", "valor_p")
hist(bd_models$valor_p, breaks =20, ylab="frequencia", xlab="valor p",main="",col="lightblue")
abline(v=0.05,col="red")
sum(bd_models$valor_p>0.05)
sum(bd_models$valor_p<=0.05)
bd_models = bd_models[order(bd_models$valor_p),]
ext.inf = bd_models[1:10,]
ext.sup = bd_models[1301:1311,]
i = 1
bd_models = bd_models[order(bd_models$valor_p),]
ext.inf = bd_models[1:10,]
ext.sup = bd_models[1301:1311,]
jogo = le_tabela_html(ext.inf$link[i])
jogo = le_tabela_html(as.character(ext.inf$link[i]))
head(bd_models)
jogo = le_tabela_html(as.character(ext.inf$link[i]), as.character(ext.inf$Sigla.visitor[i]),
as.character(ext.inf$Sigla.home[i]))
bd = subset(jogo, select=c(dif, res))
modelo = glm(res~dif, data=bd, family=binomial)
xweight <- seq(min(bd$dif), max(bd$dif), 0.1)
yweight <- predict(modelo, list(dif = xweight),type="response")
tempos = calc_fim_temp(jogo)
tempos = calc_fim_tempo(jogo)
tempos
cores = c("yellow", "orange", "red", "black", "purple")
plot( jogo$dif+rnorm(dim(jogo)[1],0,1.1),jogo$res+rnorm(dim(jogo)[1],0,0.025), pch = 16,
xlab = "Diferença de pontos", ylab = paste("Classificação : inclinação ",round(summary(modelo)[[12]][2,1],2),sep="")
,main=paste(ext.inf[i,9],ext.inf$Sigla.x[i],"-",ext.inf$Sigla.y[i]," valor-p: ",round(summary(modelo)[[12]][2,4],2),
sep=""), col = cores(5))
plot( jogo$dif+rnorm(dim(jogo)[1],0,1.1),jogo$res+rnorm(dim(jogo)[1],0,0.025), pch = 16,
xlab = "Diferença de pontos", ylab = paste("Classificação : inclinação ",round(summary(modelo)[[12]][2,1],2),sep="")
,main=paste(ext.inf[i,9],ext.inf$Sigla.x[i],"-",ext.inf$Sigla.y[i]," valor-p: ",round(summary(modelo)[[12]][2,4],2),
sep=""), col = cores[5])
cores[5]
?plot
plot( jogo$dif+rnorm(dim(jogo)[1],0,1.1),jogo$res+rnorm(dim(jogo)[1],0,0.025), pch = 16,
xlab = "Diferença de pontos", ylab = paste("Classificação : inclinação ",round(summary(modelo)[[12]][2,1],2),sep="")
,main=paste(ext.inf[i,9],ext.inf$Sigla.x[i],"-",ext.inf$Sigla.y[i]," valor-p: ",round(summary(modelo)[[12]][2,4],2),
sep=""), col = cores[1])
plot( jogo$dif+rnorm(dim(jogo)[1],0,1.1),jogo$res+rnorm(dim(jogo)[1],0,0.025), pch = 16,
xlab = "Diferença de pontos", ylab = paste("Classificação : inclinação ",round(summary(modelo)[[12]][2,1],2),sep="")
,main=paste(ext.inf[i,9],ext.inf$Sigla.x[i],"-",ext.inf$Sigla.y[i]," valor-p: ",round(summary(modelo)[[12]][2,4],2),
sep=""), col = cores[5])
cores.aux=c()
for(j in 1:length(tempos)){
cores.aux = c(cores.aux, rep(cores[j]),tempos[j])
}
cores.aux
cores.aux=c()
for(j in 1:length(tempos)){
cores.aux = c(cores.aux, rep(cores[j],tempos[j]) )
}
cores.aux
tempos
tempos = c(calc_fim_temp(jogo),dim(jogo)[1])
tempos = c(calc_fim_tempo(jogo),dim(jogo)[1])
tempos
tempos = c(calc_fim_tempo(jogo),dim(jogo)[1])
cores.aux=c()
for(j in length(tempos):1){
if(j!=1) cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)
if(j==1) cores.aux = c(rep(cores[j],tempos[j],cores.aux)
}
tempos = c(calc_fim_tempo(jogo),dim(jogo)[1])
cores.aux=c()
for(j in length(tempos):1){
if(j!=1) {
cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)}
if(j==1) {
cores.aux = c(rep(cores[j],tempos[j],cores.aux)}
}
cores.aux=c()
for(j in length(tempos):1){
if(j!=1) {
cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)} else{
cores.aux = c(rep(cores[j],tempos[j],cores.aux)}
}
for(j in length(tempos):1){
if(j!=1) {
cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)}else{
cores.aux = c(rep(cores[j],tempos[j],cores.aux)}
}
tempos = c(calc_fim_tempo(jogo),dim(jogo)[1])
cores.aux=c()
for(j in length(tempos):1){
if(j!=1) {
cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)}
if(j==1){
cores.aux = c(rep(cores[j],tempos[j],cores.aux))}
}
tempos = c(calc_fim_tempo(jogo),dim(jogo)[1])
cores.aux=c()
tempos
length(tempos):1
j!=1
j = 4
j!=1
cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)}
cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)
cores.aux
tempos[j]-tempos[j-1])
tempos[j]-tempos[j-1]
j = 2
j = 3
j!=1
cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)
cores.aux
cores.aux=c()
for(j in length(tempos):1){
if(j!=1) {
cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)}
if(j==1){
cores.aux = c(rep(cores[j],tempos[j],cores.aux))}
}
j =1
cores[j]
tempos[j]
cores.aux = c(rep(cores[j],tempos[j],cores.aux))
cores.aux=c()
for(j in length(tempos):1){
if(j!=1) {
cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)}
if(j==1){
cores.aux = c(rep(cores[j],tempos[j],cores.aux))}
}
table(cores.aux)
tempos = c(calc_fim_tempo(jogo),dim(jogo)[1])
cores.aux=c()
for(j in length(tempos):1){
if(j!=1) {
cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)}
if(j==1){
cores.aux = c(rep(cores[j],tempos[j]),cores.aux)}
}
table(cores.aux)
tempos
plot( jogo$dif+rnorm(dim(jogo)[1],0,1.1),jogo$res+rnorm(dim(jogo)[1],0,0.025), pch = 16,
xlab = "Diferença de pontos", ylab = paste("Classificação : inclinação ",round(summary(modelo)[[12]][2,1],2),sep="")
,main=paste(ext.inf[i,9],ext.inf$Sigla.x[i],"-",ext.inf$Sigla.y[i]," valor-p: ",round(summary(modelo)[[12]][2,4],2),
sep=""), col = cores.aux)
cores = c("yellow", "orange", "red", "brown", "purple")
windows()
par(mfrow=c(2,5))
for(i in 1:10){
jogo = le_tabela_html(as.character(ext.inf$link[i]), as.character(ext.inf$Sigla.visitor[i]),
as.character(ext.inf$Sigla.home[i]))
bd = subset(jogo, select=c(dif, res))
modelo = glm(res~dif, data=bd, family=binomial)
xweight <- seq(min(bd$dif), max(bd$dif), 0.1)
yweight <- predict(modelo, list(dif = xweight),type="response")
tempos = c(calc_fim_tempo(jogo),dim(jogo)[1])
cores.aux=c()
for(j in length(tempos):1){
if(j!=1) {
cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)}
if(j==1){
cores.aux = c(rep(cores[j],tempos[j]),cores.aux)}
}
plot( jogo$dif+rnorm(dim(jogo)[1],0,1.1),jogo$res+rnorm(dim(jogo)[1],0,0.025), pch = 16,
xlab = "Diferença de pontos", ylab = paste("Classificação : inclinação ",round(summary(modelo)[[12]][2,1],2),sep="")
,main=paste(ext.inf[i,9],ext.inf$Sigla.x[i],"-",ext.inf$Sigla.y[i]," valor-p: ",round(summary(modelo)[[12]][2,4],2),
sep=""), col = cores.aux)
lines(xweight, yweight)
}
names(ext.inf)
for(i in 1:10){
jogo = le_tabela_html(as.character(ext.inf$link[i]), as.character(ext.inf$Sigla.visitor[i]),
as.character(ext.inf$Sigla.home[i]))
bd = subset(jogo, select=c(dif, res))
modelo = glm(res~dif, data=bd, family=binomial)
xweight <- seq(min(bd$dif), max(bd$dif), 0.1)
yweight <- predict(modelo, list(dif = xweight),type="response")
tempos = c(calc_fim_tempo(jogo),dim(jogo)[1])
cores.aux=c()
for(j in length(tempos):1){
if(j!=1) {
cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)}
if(j==1){
cores.aux = c(rep(cores[j],tempos[j]),cores.aux)}
}
plot( jogo$dif+rnorm(dim(jogo)[1],0,1.1),jogo$res+rnorm(dim(jogo)[1],0,0.025), pch = 16,
xlab = "Diferença de pontos", ylab = paste("Classificação : inclinação ",round(summary(modelo)[[12]][2,1],2),sep="")
,main=paste(ext.inf[i,9],ext.inf$Sigla.home[i],"-",ext.inf$Sigla.visitor[i]," valor-p: ",round(summary(modelo)[[12]][2,4],2),
sep=""), col = cores.aux)
lines(xweight, yweight)
}
savePlot(filename="imagem3",type="jpg",device=dev.cur())
for(i in 1:10){
jogo = le_tabela_html(as.character(ext.sub$link[i]), as.character(ext.sub$Sigla.visitor[i]),
as.character(ext.sub$Sigla.home[i]))
bd = subset(jogo, select=c(dif, res))
modelo = glm(res~dif, data=bd, family=binomial)
xweight <- seq(min(bd$dif), max(bd$dif), 0.1)
yweight <- predict(modelo, list(dif = xweight),type="response")
tempos = c(calc_fim_tempo(jogo),dim(jogo)[1])
cores.aux=c()
for(j in length(tempos):1){
if(j!=1) {
cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)}
if(j==1){
cores.aux = c(rep(cores[j],tempos[j]),cores.aux)}
}
plot( jogo$dif+rnorm(dim(jogo)[1],0,1.1),jogo$res+rnorm(dim(jogo)[1],0,0.025), pch = 16,
xlab = "Diferença de pontos", ylab = paste("Classificação : inclinação ",round(summary(modelo)[[12]][2,1],2),sep="")
,main=paste(ext.sub[i,9],ext.sub$Sigla.home[i],"-",ext.sub$Sigla.visitor[i]," valor-p: ",round(summary(modelo)[[12]][2,4],2),
sep=""), col = cores.aux)
lines(xweight, yweight)
}
savePlot(filename="imagem4",type="jpg",device=dev.cur())
for(i in 1:10){
jogo = le_tabela_html(as.character(ext.sup$link[i]), as.character(ext.sup$Sigla.visitor[i]),
as.character(ext.sup$Sigla.home[i]))
bd = subset(jogo, select=c(dif, res))
modelo = glm(res~dif, data=bd, family=binomial)
xweight <- seq(min(bd$dif), max(bd$dif), 0.1)
yweight <- predict(modelo, list(dif = xweight),type="response")
tempos = c(calc_fim_tempo(jogo),dim(jogo)[1])
cores.aux=c()
for(j in length(tempos):1){
if(j!=1) {
cores.aux = c(rep(cores[j],tempos[j]-tempos[j-1]),cores.aux)}
if(j==1){
cores.aux = c(rep(cores[j],tempos[j]),cores.aux)}
}
plot( jogo$dif+rnorm(dim(jogo)[1],0,1.1),jogo$res+rnorm(dim(jogo)[1],0,0.025), pch = 16,
xlab = "Diferença de pontos", ylab = paste("Classificação : inclinação ",round(summary(modelo)[[12]][2,1],2),sep="")
,main=paste(ext.sup[i,9],ext.sup$Sigla.home[i],"-",ext.sup$Sigla.visitor[i]," valor-p: ",round(summary(modelo)[[12]][2,4],2),
sep=""), col = cores.aux)
lines(xweight, yweight)
}
savePlot(filename="imagem4",type="jpg",device=dev.cur())
jogo$score_x[dim(jogo)[1]]
par(mfcol=c(2,5))
for(i in 1:10){
jogo = le_tabela_html(ext.inf$link[i])
if(jogo$score_x[dim(jogo)[1]]>jogo$score_y[dim(jogo)[1]]){
plot(jogo$score_x, type="l", xlab="ponto a ponto",ylab="pontos",col="blue",
main=paste(ext.inf[i,9],ext.inf$Sigla.home[i],"-",ext.inf$Sigla.visitor[i]))
points(jogo$score_y, type="l", col="red")
legend("topleft",lwd=c(2,2),col=c("blue","red"),c(as.character(ext.inf$Sigla.home[i]),
as.character(ext.inf$Sigla.visitor[i])))}
if(jogo$score_x[dim(jogo)[1]]<jogo$score_y[dim(jogo)[1]]){
plot(jogo$score_y, type="l", xlab="ponto a ponto",ylab="pontos",col="red",
main=paste(ext.inf[i,9],ext.inf$Sigla.home[i],"-",ext.inf$Sigla.visitor[i]))
points(jogo$score_x, type="l", col="blue")
legend("topleft",lwd=c(2,2),col=c("blue","red"),c(as.character(ext.inf$Sigla.home[i]),
as.character(ext.inf$Sigla.visitor[i])))}
for(j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
max = max(abs(min(jogo$dif)),max(jogo$dif))
plot(jogo$dif, type="l", xlab="ponto a ponto",ylab="diferenca de pontos", col = "green",ylim=c(-max,max))
for( j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
abline(h=0, col ="red")
if(i==5)savePlot(filename="imagem5",type="jpg",device=dev.cur())
}
savePlot(filename="imagem6",type="jpg",device=dev.cur())
#gráficos com a história do jogo
par(mfcol=c(2,5))
for(i in 1:10){
jogo = le_tabela_html(as.character(ext.inf$link[i]), as.character(ext.inf$Sigla.visitor[i]),
as.character(ext.inf$Sigla.home[i]))
if(jogo$score_x[dim(jogo)[1]]>jogo$score_y[dim(jogo)[1]]){
plot(jogo$score_x, type="l", xlab="ponto a ponto",ylab="pontos",col="blue",
main=paste(ext.inf[i,9],ext.inf$Sigla.home[i],"-",ext.inf$Sigla.visitor[i]))
points(jogo$score_y, type="l", col="red")
legend("topleft",lwd=c(2,2),col=c("blue","red"),c(as.character(ext.inf$Sigla.home[i]),
as.character(ext.inf$Sigla.visitor[i])))}
if(jogo$score_x[dim(jogo)[1]]<jogo$score_y[dim(jogo)[1]]){
plot(jogo$score_y, type="l", xlab="ponto a ponto",ylab="pontos",col="red",
main=paste(ext.inf[i,9],ext.inf$Sigla.home[i],"-",ext.inf$Sigla.visitor[i]))
points(jogo$score_x, type="l", col="blue")
legend("topleft",lwd=c(2,2),col=c("blue","red"),c(as.character(ext.inf$Sigla.home[i]),
as.character(ext.inf$Sigla.visitor[i])))}
for(j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
max = max(abs(min(jogo$dif)),max(jogo$dif))
plot(jogo$dif, type="l", xlab="ponto a ponto",ylab="diferenca de pontos", col = "green",ylim=c(-max,max))
for( j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
abline(h=0, col ="red")
if(i==5)savePlot(filename="imagem5",type="jpg",device=dev.cur())
}
savePlot(filename="imagem6",type="jpg",device=dev.cur())
par(mfcol=c(2,5))
for(i in 1:10){
jogo = le_tabela_html(as.character(ext.sup$link[i]), as.character(ext.sup$Sigla.visitor[i]),
as.character(ext.sup$Sigla.home[i]))
plot(jogo$score_x, type="l", xlab="ponto a ponto",ylab="pontos",col="blue",
main=paste(ext.sup[i,9],ext.sup$Sigla.x[i],"-",ext.sup$Sigla.y[i]))
points(jogo$score_y, type="l", col="red")
for( j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
legend("topleft",lwd=c(2,2),col=c("blue","red"),c(as.character(ext.sup$Sigla.x[i]),as.character(ext.sup$Sigla.y[i])))
max = max(abs(min(jogo$dif)),max(jogo$dif))
plot(jogo$dif, type="l", xlab="ponto a ponto",ylab="diferenca de pontos", col = "green",ylim=c(-max,max))
for( j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
abline(h=0, col ="red")
if(i==5)savePlot(filename="imagem7",type="jpg",device=dev.cur())
}
savePlot(filename="imagem8",type="jpg",device=dev.cur())
par(mfcol=c(2,5))
for(i in 1:10){
jogo = le_tabela_html(as.character(ext.sup$link[i]), as.character(ext.sup$Sigla.visitor[i]),
as.character(ext.sup$Sigla.home[i]))
plot(jogo$score_x, type="l", xlab="ponto a ponto",ylab="pontos",col="blue",
main=paste(ext.sup[i,9],ext.sup$Sigla.x[i],"-",ext.sup$Sigla.y[i]))
points(jogo$score_y, type="l", col="red")
for( j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
legend("topleft",lwd=c(2,2),col=c("blue","red"),c(as.character(ext.sup$Sigla.home[i]),
as.character(ext.sup$Sigla.visitor[i])))
max = max(abs(min(jogo$dif)),max(jogo$dif))
plot(jogo$dif, type="l", xlab="ponto a ponto",ylab="diferenca de pontos", col = "green",ylim=c(-max,max))
for( j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
abline(h=0, col ="red")
if(i==5)savePlot(filename="imagem7",type="jpg",device=dev.cur())
}
savePlot(filename="imagem8",type="jpg",device=dev.cur())
ext.sup$link[i]
ext.inf$link[i]
jogo$score_x[dim(jogo)[1]]
jogo$score_y[dim(jogo)[1]]
ext.inf$Sigla.home[i]
head(jogo)
dim(jogo)
jogo[149,]
par(mfcol=c(2,5))
for(i in 1:10){
jogo = le_tabela_html(as.character(ext.inf$link[i]), as.character(ext.inf$Sigla.visitor[i]),
as.character(ext.inf$Sigla.home[i]))
if(jogo$score_x[dim(jogo)[1]]>jogo$score_y[dim(jogo)[1]]){
plot(jogo$score_x, type="l", xlab="ponto a ponto",ylab="pontos",col="blue",
main=paste(ext.inf[i,9],ext.inf$Sigla.home[i],"-",ext.inf$Sigla.visitor[i]))
points(jogo$score_y, type="l", col="red")
legend("topleft",lwd=c(2,2),col=c("blue","red"),names(jogo)[2,6]}
if(jogo$score_x[dim(jogo)[1]]<jogo$score_y[dim(jogo)[1]]){
plot(jogo$score_y, type="l", xlab="ponto a ponto",ylab="pontos",col="red",
main=paste(ext.inf[i,9],ext.inf$Sigla.home[i],"-",ext.inf$Sigla.visitor[i]))
points(jogo$score_x, type="l", col="blue")
legend("topleft",lwd=c(2,2),col=c("blue","red"),c(as.character(ext.inf$Sigla.home[i]),
as.character(ext.inf$Sigla.visitor[i])))}
for(j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
max = max(abs(min(jogo$dif)),max(jogo$dif))
plot(jogo$dif, type="l", xlab="ponto a ponto",ylab="diferenca de pontos", col = "green",ylim=c(-max,max))
for( j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
abline(h=0, col ="red")
if(i==5)savePlot(filename="imagem5",type="jpg",device=dev.cur())
}
savePlot(filename="imagem6",type="jpg",device=dev.cur())
par(mfcol=c(2,5))
for(i in 1:10){
jogo = le_tabela_html(as.character(ext.inf$link[i]), as.character(ext.inf$Sigla.visitor[i]),
as.character(ext.inf$Sigla.home[i]))
if(jogo$score_x[dim(jogo)[1]]>jogo$score_y[dim(jogo)[1]]){
plot(jogo$score_x, type="l", xlab="ponto a ponto",ylab="pontos",col="blue",
main=paste(ext.inf[i,9],ext.inf$Sigla.home[i],"-",ext.inf$Sigla.visitor[i]))
points(jogo$score_y, type="l", col="red")
legend("topleft",lwd=c(2,2),col=c("blue","red"),names(jogo)[2,6])}
if(jogo$score_x[dim(jogo)[1]]<jogo$score_y[dim(jogo)[1]]){
plot(jogo$score_y, type="l", xlab="ponto a ponto",ylab="pontos",col="red",
main=paste(ext.inf[i,9],ext.inf$Sigla.home[i],"-",ext.inf$Sigla.visitor[i]))
points(jogo$score_x, type="l", col="blue")
legend("topleft",lwd=c(2,2),col=c("blue","red"),names(jogo)[2,6])}
for(j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
max = max(abs(min(jogo$dif)),max(jogo$dif))
plot(jogo$dif, type="l", xlab="ponto a ponto",ylab="diferenca de pontos", col = "green",ylim=c(-max,max))
for( j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
abline(h=0, col ="red")
if(i==5)savePlot(filename="imagem5",type="jpg",device=dev.cur())
}
savePlot(filename="imagem6",type="jpg",device=dev.cur())
names(jogo)
names(jogo)[c(2,6)])
names(jogo)[c(2,6)]
#gráficos com a história do jogo
par(mfcol=c(2,5))
for(i in 1:10){
jogo = le_tabela_html(as.character(ext.inf$link[i]), as.character(ext.inf$Sigla.visitor[i]),
as.character(ext.inf$Sigla.home[i]))
if(jogo$score_x[dim(jogo)[1]]>jogo$score_y[dim(jogo)[1]]){
plot(jogo$score_x, type="l", xlab="ponto a ponto",ylab="pontos",col="blue",
main=paste(ext.inf[i,9],ext.inf$Sigla.home[i],"-",ext.inf$Sigla.visitor[i]))
points(jogo$score_y, type="l", col="red")
legend("topleft",lwd=c(2,2),col=c("blue","red"),names(jogo)[c(2,6)])}
if(jogo$score_x[dim(jogo)[1]]<jogo$score_y[dim(jogo)[1]]){
plot(jogo$score_y, type="l", xlab="ponto a ponto",ylab="pontos",col="red",
main=paste(ext.inf[i,9],ext.inf$Sigla.home[i],"-",ext.inf$Sigla.visitor[i]))
points(jogo$score_x, type="l", col="blue")
legend("topleft",lwd=c(2,2),col=c("blue","red"),names(jogo)[c(2,6)])}
for(j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
max = max(abs(min(jogo$dif)),max(jogo$dif))
plot(jogo$dif, type="l", xlab="ponto a ponto",ylab="diferenca de pontos", col = "green",ylim=c(-max,max))
for( j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
abline(h=0, col ="red")
if(i==5)savePlot(filename="imagem5",type="jpg",device=dev.cur())
}
savePlot(filename="imagem6",type="jpg",device=dev.cur())
par(mfcol=c(2,5))
for(i in 1:10){
jogo = le_tabela_html(as.character(ext.sup$link[i]), as.character(ext.sup$Sigla.visitor[i]),
as.character(ext.sup$Sigla.home[i]))
if(jogo$score_x[dim(jogo)[1]]>jogo$score_y[dim(jogo)[1]]){
plot(jogo$score_x, type="l", xlab="ponto a ponto",ylab="pontos",col="blue",
main=paste(ext.inf[i,9],ext.sup$Sigla.home[i],"-",ext.sup$Sigla.visitor[i]))
points(jogo$score_y, type="l", col="red")
legend("topleft",lwd=c(2,2),col=c("blue","red"),names(jogo)[c(2,6)])}
if(jogo$score_x[dim(jogo)[1]]<jogo$score_y[dim(jogo)[1]]){
plot(jogo$score_y, type="l", xlab="ponto a ponto",ylab="pontos",col="red",
main=paste(ext.inf[i,9],ext.sup$Sigla.home[i],"-",ext.sup$Sigla.visitor[i]))
points(jogo$score_x, type="l", col="blue")
legend("topleft",lwd=c(2,2),col=c("blue","red"),names(jogo)[c(2,6)])}
for( j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
legend("topleft",lwd=c(2,2),col=c("blue","red"),names(jogo)[2,6]}
max = max(abs(min(jogo$dif)),max(jogo$dif))
plot(jogo$dif, type="l", xlab="ponto a ponto",ylab="diferenca de pontos", col = "green",ylim=c(-max,max))
for( j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
abline(h=0, col ="red")
if(i==5)savePlot(filename="imagem7",type="jpg",device=dev.cur())
}
savePlot(filename="imagem8",type="jpg",device=dev.cur())
par(mfcol=c(2,5))
for(i in 1:10){
jogo = le_tabela_html(as.character(ext.sup$link[i]), as.character(ext.sup$Sigla.visitor[i]),
as.character(ext.sup$Sigla.home[i]))
if(jogo$score_x[dim(jogo)[1]]>jogo$score_y[dim(jogo)[1]]){
plot(jogo$score_x, type="l", xlab="ponto a ponto",ylab="pontos",col="blue",
main=paste(ext.inf[i,9],ext.sup$Sigla.home[i],"-",ext.sup$Sigla.visitor[i]))
points(jogo$score_y, type="l", col="red")
legend("topleft",lwd=c(2,2),col=c("blue","red"),names(jogo)[c(2,6)])}
if(jogo$score_x[dim(jogo)[1]]<jogo$score_y[dim(jogo)[1]]){
plot(jogo$score_y, type="l", xlab="ponto a ponto",ylab="pontos",col="red",
main=paste(ext.inf[i,9],ext.sup$Sigla.home[i],"-",ext.sup$Sigla.visitor[i]))
points(jogo$score_x, type="l", col="blue")
legend("topleft",lwd=c(2,2),col=c("blue","red"),names(jogo)[c(2,6)])}
for( j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
max = max(abs(min(jogo$dif)),max(jogo$dif))
plot(jogo$dif, type="l", xlab="ponto a ponto",ylab="diferenca de pontos", col = "green",ylim=c(-max,max))
for( j in 1:length(calc_fim_tempo(jogo))){ abline(v = calc_fim_tempo(jogo)[j],col="black")}
abline(h=0, col ="red")
if(i==5)savePlot(filename="imagem7",type="jpg",device=dev.cur())
}
savePlot(filename="imagem8",type="jpg",device=dev.cur())
head(jogo)
tempos= calc_fim_tempo(jogo)
tempos
jogo1 = jogo[c(1:tempos[3]),]
dim(jogo1)
